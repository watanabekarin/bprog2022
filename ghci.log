GHCi, version 9.0.2: https://www.haskell.org/ghc/  :? for help
Loaded GHCi configuration from /home/karin/bprog2022/.ghci
2022-05-19 15:41:23.323720353
>>> 23 + 5
28
2022-05-19 15:54:15.271090846
>>> 3 + 2 * 5
13
2022-05-19 15:54:58.230271759
>>> 5 - 4 - 5
-4
2022-05-19 15:55:50.599649432
>>> sqrt 2
1.4142135623730951
2022-05-19 15:59:47.433337459
>>> double 3

<interactive>:5:1: error: Variable not in scope: double :: t0 -> t
2022-05-19 16:02:04.705557902
>>> GHCi, version 9.0.2: https://www.haskell.org/ghc/  :? for help
Loaded GHCi configuration from /home/karin/bprog2022/.ghci
2022-05-26 15:02:04.776878454
>>> maxBound::Int
9223372036854775807
2022-05-26 15:03:25.556561661
>>> 2 ^ 63 - 1
9223372036854775807
2022-05-26 15:04:59.252835471
>>> minBound :: Int
-9223372036854775808
2022-05-26 15:05:37.952424178
>>> :e src/First.hs
   1  module First where
   2  
   3  double :: Int -> Int
   4  double x = x + x
Ok, no modules loaded.
2022-05-26 15:49:01.344767523
>>> :l src/First.hs
[1 of 1] Compiling First            ( src/First.hs, interpreted )
Ok, one module loaded.
2022-05-26 15:49:01.413971249
>>> double 3
6
2022-05-26 15:56:20.888715371
>>> double (1 + 2)
6
2022-05-26 15:57:17.102348867
>>> GHCi, version 9.0.2: https://www.haskell.org/ghc/  :? for help
Loaded GHCi configuration from /home/karin/bprog2022/.ghci
2022-06-09 14:54:48.633572139
>>> 2 + 3 * 4
14
2022-06-09 14:58:39.363152732
>>> (2 + 3) * 4
20
2022-06-09 15:00:08.310784481
>>> :i sqrt
type Floating :: * -> Constraint
class Fractional a => Floating a where
  ...
  sqrt :: a -> a
  ...
  	-- Defined in ‘GHC.Float’
2022-06-09 15:00:40.232567843
>>> >>>sqrt (3 ^ 2 + 4 ^ 2)

<interactive>:4:1: error: parse error on input ‘>>>’
2022-06-09 15:05:05.697525562
>>> sqrt(3 ^ 2 + 4 ^ 2)
5.0
2022-06-09 15:05:53.298150223
>>> sqrt (25 :: Int)

<interactive>:6:1: error:
    • No instance for (Floating Int) arising from a use of ‘sqrt’
    • In the expression: sqrt (25 :: Int)
      In an equation for ‘it’: it = sqrt (25 :: Int)
2022-06-09 15:08:10.030123258
>>> sqrt (25 :: Double)
5.0
2022-06-09 15:09:19.270114338
>>> head [1 , 3 , 4 ,]

<interactive>:8:18: error: parse error on input ‘]’
2022-06-09 15:46:37.690503009
>>> head [1 , 3 , 4]
1
2022-06-09 15:47:10.098654158
>>> hoge = [ 3 , 1 , 4 , 1 , 5] :: [INT]

<interactive>:10:33: error:
    Not in scope: type constructor or class ‘INT’
2022-06-09 15:50:33.945657198
>>> hoge - [3 , 1 , 4 , 1 , 5] :: [Int]

<interactive>:11:1: error: Variable not in scope: hoge :: [Int]
2022-06-09 15:51:12.481797657
>>> head hoge

<interactive>:12:6: error: Variable not in scope: hoge :: [a]
2022-06-09 15:51:23.293124039
>>> hoge = [3 , 1 , 4 , 1 , 5] :: [Int]
2022-06-09 15:52:21.231150634
>>> head hoge
3
2022-06-09 15:52:31.097935398
>>> tail hoge
[1,4,1,5]
2022-06-09 15:52:41.379043821
>>> hoge !! 0
3
2022-06-09 15:54:54.595651615
>>> hoge !! 2
4
2022-06-09 15:56:12.274476451
>>> take 3 hoge
[3,1,4]
2022-06-09 15:56:51.127642482
>>> drop 3 hoge
[1,5]
2022-06-09 15:57:22.653983857
>>> hoge 5 hoge

<interactive>:20:1: error:
    • Couldn't match expected type: t0 -> [Int] -> t
                  with actual type: [Int]
    • The function ‘hoge’ is applied to two value arguments,
        but its type ‘[Int]’ has none
      In the expression: hoge 5 hoge
      In an equation for ‘it’: it = hoge 5 hoge
    • Relevant bindings include it :: t (bound at <interactive>:20:1)
2022-06-09 15:58:12.836831014
>>> length head

<interactive>:21:1: error:
    • No instance for (Foldable ((->) [a0]))
        arising from a use of ‘length’
    • In the expression: length head
      In an equation for ‘it’: it = length head
2022-06-09 16:00:50.814463926
>>> length hoge
5
2022-06-09 16:01:03.36210886
>>> sum hoge
14
2022-06-09 16:01:53.738172321
>>> prodact hoge

<interactive>:24:1: error:
    • Variable not in scope: prodact :: [Int] -> t
    • Perhaps you meant ‘product’ (imported from Prelude)
2022-06-09 16:02:29.891224217
>>> product hoge
60
2022-06-09 16:02:43.187192028
>>> hoge ++ hoge
[3,1,4,1,5,3,1,4,1,5]
2022-06-09 16:04:47.660191573
>>> reverse hoge
[5,1,4,1,3]
2022-06-09 16:05:39.488504826
>>> :e src/First.hs
   1  module First where
   2  
   3  double :: Int -> Int
   4  double x = x + x
Ok, no modules loaded.
2022-06-09 16:07:40.680640631
>>> :load src/First.hs
[1 of 1] Compiling First            ( src/First.hs, interpreted )
Ok, one module loaded.
2022-06-09 16:07:40.747367039
>>> double 3 + 3
9
2022-06-09 16:09:00.453436382
>>> double (3 + 3)
12
2022-06-09 16:12:08.281294685
>>> :quadruple (2 + 3)
unknown command ':quadruple'
use :? for help.
2022-06-09 16:15:48.520588819
>>> :quit
Leaving GHCi.
